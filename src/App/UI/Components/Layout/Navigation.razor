@using Microsoft.AspNetCore.Components.Routing

<nav class=@ClassNames.Combine("backdrop-mantle drop-shadow-sm ease-in flex flex-row md:flex-col h-full isolate items-stretch md:items-center justify-center md:justify-start overflow-y-auto p-1.5 md:p-2.5 ring-2 ring-fuchsia-800/20 rounded-t-md md:rounded-md shadow-sm space-x-2 md:space-x-0 md:space-y-2 transition transition-width", IsMenuOpen ? "opacity-100 w-full" : "hidden opacity-0 md:flex md:opacity-100")>
    @foreach (var item in NavigationItems.Values)
    {
        <div class="w-full">
            <NavLink ActiveClass="bg-crust font-bold ring-1 shadow-sm" class=@ClassNames.Combine("drop-shadow-sm ease-in flex flex-col md:flex-row font-semibold h-full items-center justify-center md:justify-start no-underline p-1 md:p-0 ring-0 ring-fuchsia-400/20 rounded-md transition w-full active:bg-crust active:ring-1 active:shadow-sm hover:bg-crust hover:ring-1 hover:shadow-sm", !IsMenuOpen ? "justify-center" : "") href="@item.Path" title="@item.Label" Match="@item.Match" @key="@item.Path">
                <div class="flex items-center justify-center p-1.5 md:p-3">
                    <Icon class="md:text-2xl" Name="@item.Icon" Filled="false" Size="@TextSize.ExtraLarge" />
                </div>
                <span class=@ClassNames.Combine("ease-in font-semibold md:ml-0.5 md:mr-2.5 p-0.5 md:p-2 rounded-md text-xs md:text-lg transition", !IsMenuOpen ? "hidden opacity-0" : "opacity-100")>@item.Label</span>
            </NavLink>
        </div>
    }

    <div class="flex-grow hidden md:block"></div>

    <div class="w-full">
        <span class=@ClassNames.Combine("cursor-pointer drop-shadow-sm ease-in flex flex-col md:flex-row font-semibold h-full items-center justify-center md:justify-start p-1 md:p-0 ring-0 ring-fuchsia-400/20 rounded-md transition w-full active:bg-crust active:ring-1 active:shadow-sm hover:bg-crust hover:ring-1 hover:shadow-sm", !IsMenuOpen ? "justify-center" : "", isRandomLoading ? "bg-crust font-bold ring-1 shadow-sm" : "") role="button" title="Random" @onclick="@OnRandomClickCore">
            <div class="flex items-center justify-center p-1.5 md:p-3">
                <Icon class=@ClassNames.Combine("md:text-2xl", isRandomLoading ? "motion-safe:animate-spin" : "") Name="@IconName.Casino" Size="@TextSize.ExtraLarge" />
            </div>
            <span class=@ClassNames.Combine("ease-in font-semibold md:ml-0.5 md:mr-2.5 p-0.5 md:p-2 rounded-md text-xs md:text-lg transition", !IsMenuOpen ? "hidden opacity-0" : "opacity-100")>Random</span>
        </span>
    </div>
</nav>

@code {

    private bool isRandomLoading;

    [EditorRequired]
    [Parameter]
    public bool IsMenuOpen { get; init; }

    [Parameter]
    public EventCallback OnRandomClick { get; init; }

    private async Task OnRandomClickCore()
    {
        isRandomLoading = true;
        await OnRandomClick.InvokeAsync();
        isRandomLoading = false;
    }

}