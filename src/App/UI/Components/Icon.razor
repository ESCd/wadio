<i @attributes="@AdditionalAttributes" class="@ClassNames.Combine(AdditionalAttributes, Size.ToCssClass(), Filled ? "filled" : string.Empty)" alt="@Name">
    @if (Name == IconName.AnimatedWaves)
    {
        @AnimatedWaves()
    }
    else
    {
        @Name
    }
</i>

@code {

    [Parameter(CaptureUnmatchedValues = true)]
    public IReadOnlyDictionary<string, object>? AdditionalAttributes { get; init; }

    [Parameter]
    public bool Filled { get; init; } = true;

    [EditorRequired]
    [Parameter]
    public IconName Name { get; init; } = default!;

    [Parameter]
    public TextSize Size { get; init; } = TextSize.Base;

    private static RenderFragment AnimatedWaves() => __builder =>
    {
        <svg viewBox="0 0 24 24" width="1em" height="auto" fill="currentColor" style="display:inline-block; vertical-align:middle;" aria-hidden="true">
            <rect class="wave" x="3" y="10" height="4" />
            <rect class="wave" x="7" y="7" height="10" />
            <rect class="wave" x="11" y="4" height="16" />
            <rect class="wave" x="15" y="7" height="10" />
            <rect class="wave" x="19" y="10" height="4" />
        </svg>
    };

}