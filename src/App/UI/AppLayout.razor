@using Microsoft.AspNetCore.Components.Routing

@inherits Stateful<AppLayoutState>

@inject IWadioApi Api
@inject LocalStorageInterop LocalStorage
@inject NavigationManager Navigation

<CascadingValue TValue="PlayerContext" Value="@player">
    <header class="col-span-2 flex flex-row items-center px-5 w-full">
        <button class="icon !p-2.5 font-extrabold" type="button" title="Menu" @onclick="@(async () => await Mutate(state => AppLayoutState.ToggleMenu(LocalStorage, state)))">
            <Icon Name="@(State.IsMenuOpen? IconName.MenuOpen: IconName.Menu)" Size="@TextSize.ExtraLarge2" />
        </button>

        <div class="flex flex-row items-center justify-between ml-6.5 w-full">
            <a class="drop-shadow-sm ease-in font-logo font-medium no-underline p-2 text-fuchsia-300/80 text-6xl transition hover:text-fuchsia-300" href="/">Wadio</a>

            <button class="icon !p-2.5 font-extrabold" type="button" title="App Info" @onclick="@(() => dialog!.Open())">
                <Icon Name="@IconName.Help" Filled="false" Size="@TextSize.ExtraLarge" />
            </button>
        </div>
    </header>

    <div class=@ClassNames.Combine("col-1 flex flex-col pl-2.5 h-full", State.IsMenuOpen ? "pb-2.5 pr-2.5 md:pb-0 md:pr-0" : "hidden md:flex")>
        <nav class=@ClassNames.Combine("backdrop-mantle drop-shadow-sm ease-in flex flex-col h-full items-center justify-between overflow-auto p-2 ring-2 ring-fuchsia-800/20 rounded-md space-y-4 shadow-sm transition transition-width", State.IsMenuOpen ? "opacity-100 w-full" : "hidden opacity-0 md:flex md:opacity-100")>
            <ul class="flex flex-col h-full items-center overflow-y-auto space-y-2 w-full">
                @foreach (var item in NavigationItems.Values)
                {
                    <li class="w-full" @key="@item.Path">
                        <NavLink ActiveClass="bg-crust font-bold ring-1 shadow-sm" class=@ClassNames.Combine("drop-shadow-sm ease-in flex flex-row font-semibold h-full items-center no-underline ring-0 ring-fuchsia-400/20 rounded-md transition w-full active:bg-crust active:ring-1 active:shadow-sm hover:bg-crust hover:ring-1 hover:shadow-sm", !State.IsMenuOpen ? "justify-center" : "") href="@item.Path" title="@item.Label" Match="@item.Match">
                            <div class="flex items-center justify-center p-3">
                                <Icon Name="@item.Icon" Filled="false" Size="@TextSize.ExtraLarge2" />
                            </div>
                            <span class=@ClassNames.Combine("ease-in font-semibold ml-0.5 mr-2.5 p-2 rounded-md text-lg transition", !State.IsMenuOpen ? "hidden opacity-0" : "opacity-100")>@item.Label</span>
                        </NavLink>
                    </li>
                }
            </ul>

            <div class=@ClassNames.Combine("cursor-pointer drop-shadow-sm ease-in flex flex-row font-semibold items-center ring-0 ring-fuchsia-400/20 rounded-md transition w-full active:bg-crust active:ring-1 active:shadow-sm hover:bg-crust hover:ring-1 hover:shadow-sm", !State.IsMenuOpen ? "justify-center" : "", State.IsRandomLoading ? "bg-crust font-bold ring-1 shadow-sm" : "") role="button" title="Random" @onclick="OnRandomClick">
                <div class="flex items-center justify-center p-3">
                    <Icon class="@(State.IsRandomLoading ? "motion-safe:animate-spin" : "")" Name="@IconName.Casino" Size="@TextSize.ExtraLarge2" />
                </div>
                <span class=@ClassNames.Combine("ease-in font-semibold ml-0.5 mr-2.5 p-2 rounded-md text-lg transition", !State.IsMenuOpen ? "hidden opacity-0" : "opacity-100")>Random</span>
            </div>
        </nav>
    </div>

    <div class="col-2 overflow-hidden md:pl-2 row-2">
        <main class="h-full overflow-auto w-full">
            @ChildContent
        </main>
    </div>

    <div class="col-span-2 md:p-2.5 md:pt-0 w-full z-10">
        <Player class="rounded-t-md md:rounded-md" />
    </div>
</CascadingValue>

<Dialog @ref="@dialog">
    <h1 class="font-medium font-logo text-6xl text-fuchsia-300">Wadio</h1>
    <Divider class="p-2 px-0.5" />

    <div class="max-w-prose py-2.5 space-y-2">
        <p>A music app, powered by <a href="https://www.radio-browser.info" target="_blank">radio-browser</a>.</p>
        <p>Report a Bug or Request a Feature on <a href="https://github.com/ESCd/wadio" target="_blank">GitHub</a>.</p>

        <a class="bg-accent drop-shadow-sm flex flex-row justify-around items-center p-2.5 mt-4 rounded-full shadow-sm space-x-0.5 w-fit" href="https://ko-fi.com/cryptoc1" target="_blank">
            <img class="shrink-0 w-6" src="https://storage.ko-fi.com/cdn/cup-border.png" alt="Ko-fi donations" />
            <span class="font-bold px-2 text-white">Support on Ko-fi</span>
        </a>
    </div>

    <div class="flex flex-row items-center justify-between mt-2">
        <div class="flex flex-col">
            <code class="text-xs">v@(AppVersion.Value)</code>
            <code class="text-xs">&copy;@DateTime.Today.Year Escape Developers</code>
        </div>

        <button type="button" @onclick="@(() => dialog!.Close())">Close</button>
    </div>
</Dialog>

@code {

    private Dialog? dialog;
    private IDisposable? subscription;

    private readonly PlayerContext player = new();

    [EditorRequired]
    [Parameter]
    public RenderFragment ChildContent { get; init; }

    protected override void Dispose(bool disposing)
    {
        if (disposing)
        {
            subscription?.Dispose();
            subscription = default;

            player.Dispose();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Mutate(state => AppLayoutState.Load(LocalStorage, state));
            subscription = player.OnChanged((_, _) =>
            {
                StateHasChanged();
                return default;
            });
        }
    }

    private async Task OnRandomClick() => await Mutate(state => AppLayoutState.GoToRandom(Api, Navigation, state));

}