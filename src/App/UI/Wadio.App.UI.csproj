<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

  <PropertyGroup>
    <DebuggerSupport Condition=" '$(Configuration)' == 'Debug' ">true</DebuggerSupport>
    <EnableInteropBuild>true</EnableInteropBuild>
    <EnablePostCSSTransform>true</EnablePostCSSTransform>
    <EnableTrimAnalyzer>true</EnableTrimAnalyzer>
    <ExcludeConfigFilesFromBuildOutput>true</ExcludeConfigFilesFromBuildOutput>
    <IsAotCompatible>true</IsAotCompatible>
    <NoDefaultLaunchSettingsFile>true</NoDefaultLaunchSettingsFile>
    <RunAOTCompilation>true</RunAOTCompilation>
    <StaticWebAssetProjectMode>Default</StaticWebAssetProjectMode>
    <WasmEmitSymbolMap Condition=" '$(Configuration)' == 'Debug' ">true</WasmEmitSymbolMap>
    <WasmEnableWebcil>true</WasmEnableWebcil>
  </PropertyGroup>

  <ItemGroup>
    <SupportedPlatform Include="browser" />

    <TrimmerRootAssembly Include="Wadio.App.UI" />
    <InteropModules Include="Interop/*.ts" Exclude="$(DefaultItemExcludes)" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="ESCd.Extensions.Http" Version="1.0.13" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="$(AspNetCoreVersion)" />
    <PackageReference Include="Microsoft.AspNetCore.WebUtilities" Version="$(AspNetCoreVersion)" />
    <PackageReference Include="Microsoft.Extensions.Http.Resilience" Version="9.9.0" />
    <PackageReference Include="System.Text.Json" Version="9.0.9" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Abstractions\Wadio.App.Abstractions.csproj" />
  </ItemGroup>

  <PropertyGroup>
    <GenerateComputedBuildStaticWebAssetsDependsOn>
      BuildInteropModules;
      $(GenerateComputedBuildStaticWebAssetsDependsOn)
    </GenerateComputedBuildStaticWebAssetsDependsOn>

    <RestoreNpmPackagesBefore>BeforeBuild</RestoreNpmPackagesBefore>
    <RestoreNpmPackagesBefore Condition=" '$(TargetFramework)' == '' ">DispatchToInnerBuilds</RestoreNpmPackagesBefore>
  </PropertyGroup>

  <Target Name="RestoreNpmPackages" AfterTargets="PrepareForBuild;Restore" BeforeTargets="$(RestoreNpmPackagesBefore)" Inputs="$(MSBuildProjectFile);package.json;package-lock.json" Outputs="node_modules\.package-lock.json" Condition=" '$(EnableInteropBuild)' == 'true' OR '$(EnablePostCSSTransform)' == 'true' ">
    <!-- The project contains a `package.json`, but not a `package-lock.json` -->
    <Exec Command="npm i" WorkingDirectory="$(MSBuildProjectDirectory)" Condition="!Exists('$(MSBuildProjectDirectory)\package-lock.json') AND Exists('$(MSBuildProjectDirectory)\package.json') AND !Exists('$(MSBuildProjectDirectory)\node_modules\.package-lock.json')" />

    <!-- The project contains a `package.json` AND `package-lock.json` -->
    <Exec Command="npm ci" WorkingDirectory="$(MSBuildProjectDirectory)" Condition="Exists('$(MSBuildProjectDirectory)\package-lock.json') AND Exists('$(MSBuildProjectDirectory)\package.json') AND !Exists('$(MSBuildProjectDirectory)\node_modules\.package-lock.json')" />
  </Target>

  <Target Name="BuildInteropModules" BeforeTargets="AssignTargetPaths;ResolveProjectStaticWebAssets" DependsOnTargets="RestoreNpmPackages" Inputs="@(InteropModules)" Outputs="$(IntermediateOutputPath)esbuild.outputs.txt" Condition=" '$(EnableInteropBuild)' == 'true' ">
    <PropertyGroup>
      <_ESBuildOutputFullPath>$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)esbuild'))/</_ESBuildOutputFullPath>
    </PropertyGroup>

    <Exec Command="npx tsc -noEmit" WorkingDirectory="$(MSBuildProjectDirectory)" />
    <Exec Command="node esbuild.config.js --inputs &quot;@(InteropModules)&quot; --output $(_ESBuildOutputFullPath)" WorkingDirectory="$(MSBuildProjectDirectory)" />

    <ItemGroup>
      <_ESBuildOutput Include="$(_ESBuildOutputFullPath)\**" />
    </ItemGroup>

    <WriteLinesToFile File="$(IntermediateOutputPath)esbuild.outputs.txt" Lines="@(_ESBuildOutput)" />
  </Target>

  <Target Name="DefineInteropStaticWebAssets" AfterTargets="BuildInteropModules" DependsOnTargets="ResolveStaticWebAssetsConfiguration">
    <ItemGroup>
      <FileWrites Include="@(_ESBuildOutput)" />
      <FileWrites Include="$(IntermediateOutputPath)esbuild.outputs.txt" />
    </ItemGroup>

    <DefineStaticWebAssets CandidateAssets="@(_ESBuildOutput)" FingerprintCandidates="$(StaticWebAssetsFingerprintContent)" FingerprintPatterns="@(StaticWebAssetFingerprintPattern)" SourceType="Computed" SourceId="$(PackageId)" ContentRoot="$(_ESBuildOutputFullPath)" BasePath="$(StaticWebAssetBasePath)Interop/" AssetMergeSource="$(StaticWebAssetMergeTarget)" CacheManifestPath="$(_ResolveProjectStaticWebAssetsCachePath)">
      <Output TaskParameter="Assets" ItemName="StaticWebAsset" />
      <Output TaskParameter="Assets" ItemName="_InteropModuleStaticWebAsset" />
    </DefineStaticWebAssets>

    <DefineStaticWebAssetEndpoints CandidateAssets="@(_InteropModuleStaticWebAsset)" ExistingEndpoints="@(StaticWebAssetEndpoint)" ContentTypeMappings="@(StaticWebAssetContentTypeMapping)">
      <Output TaskParameter="Endpoints" ItemName="StaticWebAssetEndpoint" />
    </DefineStaticWebAssetEndpoints>
  </Target>

  <Target Name="TransformScopedCssBundle" AfterTargets="BundleScopedCssFiles" DependsOnTargets="RestoreNpmPackages" Condition=" '$(EnablePostCSSTransform)' == 'true' ">
    <PropertyGroup>
      <_ScopedCssBundle>$(ProjectDir)obj\$(ConfigurationName)\$(TargetFramework)\scopedcss\projectbundle\$(ProjectName).bundle.scp.css</_ScopedCssBundle>
      <!-- <_ScopedCssBundle Condition=" '$(UsingMicrosoftNETSdkBlazorWebAssembly)' == 'true' ">$(ProjectDir)obj\$(ConfigurationName)\$(TargetFramework)\scopedcss\bundle\$(ProjectName).styles.css</_ScopedCssBundle> -->

      <_CrossEnvArguments>MSBUILD_PROJECT_DIR='$(MSBuildProjectDirectory)'</_CrossEnvArguments>

      <_PostCssArguments>$(_ScopedCssBundle) -r --config .</_PostCssArguments>
      <_PostCssArguments Condition=" '$(Configuration)' == 'Release' ">$(_PostCssArguments) --env production --no-map</_PostCssArguments>
    </PropertyGroup>

    <Exec Command="npx cross-env $(_CrossEnvArguments) postcss $(_PostCssArguments)" WorkingDirectory="$(MSBuildProjectDirectory)" Condition="Exists('$(_ScopedCssBundle)')" />
  </Target>

</Project>